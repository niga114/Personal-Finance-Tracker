!(function ($) {
  "use strict";

  var TRANSITION_END = "bsTransitionEnd";
  var Alert = (function () {
    function Alert(element) {
      this._element = element;
    }
    Alert.prototype.close = function (element) {
      var rootElement = element || this._element;
      $(rootElement).trigger($.Event("close.bs.alert"));
      $(rootElement).removeClass("show").detach().trigger("closed.bs.alert").remove();
    };
    Alert._jQueryInterface = function (config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data("bs.alert");
        if (!data) {
          data = new Alert(this);
          $this.data("bs.alert", data);
        }
        if (config === "close") {
          data[config](this);
        }
      });
    };
    return Alert;
  })();

  var Button = (function () {
    function Button(element) {
      this._element = element;
    }
    Button.prototype.toggle = function () {
      $(this._element).toggleClass("active");
      $(this._element).attr("aria-pressed", function (i, attr) {
        return attr === "true" ? "false" : "true";
      });
    };
    Button._jQueryInterface = function (config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data("bs.button");
        if (!data) {
          data = new Button(this);
          $this.data("bs.button", data);
        }
        if (config === "toggle") {
          data[config]();
        }
      });
    };
    return Button;
  })();

  $(document).on("click.bs.alert.data-api", "[data-dismiss='alert']", function (event) {
    event.preventDefault();
    Alert._jQueryInterface.call($(this).closest(".alert"), "close");
  });

  $(document).on("click.bs.button.data-api", "[data-toggle='button']", function (event) {
    event.preventDefault();
    Button._jQueryInterface.call($(this), "toggle");
  });

  $.fn.alert = Alert._jQueryInterface;
  $.fn.alert.Constructor = Alert;
  $.fn.button = Button._jQueryInterface;
  $.fn.button.Constructor = Button;
})(jQuery);
